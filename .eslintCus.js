module.exports = {
  parser: '@babel/eslint-parser',
  plugins: ['import', 'no-wildcard-postmessage'],
  extends: [],
  parserOptions: {
    ecmaVersion: 2019,
    sourceType: 'module',
    ecmaFeatures: {
      globalReturn: false,
      impliedStrict: true,
      jsx: true,
      legacyDecorators: true,
    },
    requireConfigFile: false,
    allowImportExportEverywhere: false,
  },
  env: {
    browser: true,
    node: true,
    commonjs: true,
    es6: true,
  },
  root: true,
  ignorePatterns: [
    '**/node_modules/**',
    '**/bower_components/**',
    '**/miniprogram_npm/**',
    '**/thirdparty/**',
    '**/i18n/**',
    '**/dist/**',
    '**/build/**',
    '**/www/**',
    '**/.*/**',
    '**/output/**',
    '**/static/**',
    '**/assets/**',
    '**/public/**',
    '**/dll/**/*.js',
    '**/*.spec.ts',
    '**/*.spec.tsx',
    '**/*.spec.js',
    '**/*.spec.jsx',
    '**/*.test.ts',
    '**/*.test.tsx',
    '**/*.test.js',
    '**/*.test.jsx',
    '**/test/**',
    '**/spec/**',
    '**/__test__/**',
    '**/coverage/**',
    '**/mock*/**',
    'BuildScript/**',
    '**/*.d.ts',
    '**/*.min.js',
    '**/*-min.js',
    '*.config.*',
    '**/storybook-static/**/*.js',
    '**/lang/**',
  ],
  rules: {
    'accessor-pairs': [
      'error',
      {
        setWithoutGet: true,
        getWithoutSet: false,
      },
    ],
    'array-callback-return': 'error',
    camelcase: [
      'warn',
      {
        properties: 'never',
      },
    ],
    'constructor-super': 'error',
    'default-case': [
      'error',
      {
        commentPattern: '^no default$',
      },
    ],
    'default-case-last': 'error',
    'default-param-last': 'error',
    'dot-notation': [
      'warn',
      {
        allowPattern: '^(localStorage|sessionStorage)$',
      },
    ],
    eqeqeq: ['error', 'always'],
    'for-direction': 'error',
    'func-name-matching': [
      'error',
      'always',
      {
        includeCommonJSModuleExports: false,
      },
    ],
    'func-style': 'warn',
    'getter-return': 'error',
    'grouped-accessor-pairs': 'error',
    'guard-for-in': 'warn',
    'id-length': [
      'error',
      {
        properties: 'never',
        exceptions: ['a', 'b', 'e', 'h', 'i', 'j', 'k', 'u', 'v', 'x', 'y', 'z', '_'],
      },
    ],
    'max-depth': ['error', 3],
    'max-lines': [
      'error',
      {
        max: 500,
        skipBlankLines: true,
        skipComments: true,
      },
    ],
    'max-lines-per-function': [
      'error',
      {
        max: 450,
        skipBlankLines: true,
        skipComments: true,
      },
    ],
    'max-nested-callbacks': ['error', 3],
    'new-cap': [
      'error',
      {
        newIsCap: true,
        capIsNew: false,
        properties: true,
      },
    ],
    'no-alert': 'warn',
    'no-array-constructor': 'error',
    'no-async-promise-executor': 'error',
    'no-caller': 'error',
    'no-case-declarations': 'error',
    'no-class-assign': 'error',
    'no-compare-neg-zero': 'error',
    'no-cond-assign': ['error', 'always'],
    'no-const-assign': 'error',
    'no-constant-condition': [
      'error',
      {
        checkLoops: false,
      },
    ],
    'no-constructor-return': 'error',
    'no-debugger': 'error',
    'no-dupe-class-members': 'error',
    'no-dupe-else-if': 'error',
    'no-dupe-keys': 'error',
    'no-duplicate-case': 'error',
    'no-empty': [
      'error',
      {
        allowEmptyCatch: true,
      },
    ],
    'no-empty-character-class': 'error',
    'no-empty-pattern': 'error',
    'no-eq-null': 'error',
    'no-eval': [
      'error',
      {
        allowIndirect: true,
      },
    ],
    'no-ex-assign': 'error',
    'no-extend-native': 'error',
    'no-extra-bind': 'error',
    'no-fallthrough': [
      'error',
      {
        commentPattern: '.',
      },
    ],
    'no-func-assign': 'error',
    'no-global-assign': 'error',
    'no-implicit-coercion': [
      'warn',
      {
        allow: ['!!'],
      },
    ],
    'no-implied-eval': 'error',
    'no-import-assign': 'warn',
    'no-inner-declarations': ['error', 'both'],
    'no-invalid-regexp': 'error',
    'no-invalid-this': 'warn',
    'no-irregular-whitespace': [
      'error',
      {
        skipStrings: true,
        skipComments: false,
        skipRegExps: true,
        skipTemplates: true,
      },
    ],
    'no-iterator': 'error',
    'no-labels': 'error',
    'no-lone-blocks': 'error',
    'no-loss-of-precision': 'error',
    'no-misleading-character-class': 'warn',
    'no-multi-assign': 'error',
    'no-multi-str': 'error',
    'no-nested-ternary': 'error',
    'no-new': 'warn',
    'no-new-func': 'warn',
    'no-new-object': 'error',
    'no-new-symbol': 'error',
    'no-new-wrappers': 'error',
    'no-obj-calls': 'error',
    'no-param-reassign': 'error',
    'no-plusplus': [
      'warn',
      {
        allowForLoopAfterthoughts: true,
      },
    ],
    'no-promise-executor-return': 'error',
    'no-proto': 'error',
    'no-prototype-builtins': 'warn',
    'no-redeclare': 'error',
    'no-regex-spaces': 'error',
    'no-restricted-globals': [
      'warn',
      {
        name: 'setInterval',
        message: 'Using `setInterval` may cause performance issues. It is recommended to replace it with `setTimeout`',
      },
    ],
    'no-return-assign': ['error', 'always'],
    'no-self-assign': 'error',
    'no-self-compare': 'error',
    'no-sequences': 'error',
    'no-setter-return': 'error',
    'no-shadow': 'warn',
    'no-shadow-restricted-names': 'error',
    'no-sparse-arrays': 'error',
    'no-this-before-super': 'error',
    'no-throw-literal': 'error',
    'no-undef-init': 'error',
    'no-unmodified-loop-condition': 'error',
    'no-unreachable': 'error',
    'no-unreachable-loop': 'error',
    'no-unsafe-finally': 'error',
    'no-unsafe-negation': 'error',
    'no-unsafe-optional-chaining': 'error',
    'no-unused-expressions': [
      'error',
      {
        allowShortCircuit: true,
        allowTernary: true,
        allowTaggedTemplates: true,
      },
    ],
    'no-unused-vars': [
      'error',
      {
        vars: 'all',
        args: 'all',
        ignoreRestSiblings: false,
        caughtErrors: 'none',
        varsIgnorePattern: '^_',
        argsIgnorePattern: '^_',
      },
    ],
    'no-use-before-define': [
      'error',
      {
        variables: false,
        functions: false,
        classes: false,
      },
    ],
    'no-useless-backreference': 'error',
    'no-useless-call': 'error',
    'no-useless-catch': 'error',
    'no-useless-computed-key': 'error',
    'no-useless-concat': 'warn',
    'no-useless-rename': 'error',
    'no-var': 'error',
    'no-void': 'error',
    'object-shorthand': ['error', 'properties'],
    'one-var': ['error', 'never'],
    'prefer-arrow-callback': 'warn',
    'prefer-const': [
      'error',
      {
        destructuring: 'all',
      },
    ],
    'prefer-destructuring': [
      'warn',
      {
        VariableDeclarator: {
          object: true,
          array: false,
        },
        AssignmentExpression: {
          object: false,
          array: false,
        },
      },
    ],
    'prefer-regex-literals': 'warn',
    'prefer-rest-params': 'warn',
    'require-yield': 'error',
    'spaced-comment': [
      'warn',
      'always',
      {
        block: {
          exceptions: ['*'],
          balanced: true,
        },
        markers: ['/'],
      },
    ],
    'symbol-description': 'error',
    'use-isnan': 'error',
    'valid-typeof': 'error',
    yoda: [
      'warn',
      'never',
      {
        onlyEquality: true,
      },
    ],
    curly: ['warn', 'all'],
    'comma-dangle': 'off',
    'comma-style': 'off',
    'eol-last': 'warn',
    indent: 'off',
    'no-mixed-operators': 'off',
    'padded-blocks': ['warn', 'never'],
    'quote-props': ['warn', 'as-needed'],
    semi: 'off',
    'max-len': 'off',
    'import/first': 'error',
    'import/no-named-as-default': 'error',
    'import/no-duplicates': 'error',
    'import/prefer-default-export': 'warn',
    'no-return-await': 'warn',
    'no-wildcard-postmessage/no-wildcard-postmessage': 'warn'
  },
  overrides: [
    {
      parserOptions: {
        babelOptions: {
          presets: ['@babel/preset-react'],
        },
      },
      plugins: ['react', 'react-hooks', 'jsx-a11y'],
      settings: {
        react: {
          version: 'detect',
        },
      },
      files: ['*.js', '*.ts', '*.jsx', '*.tsx'],
      rules: {
        'react/destructuring-assignment': 'warn',
        'react/jsx-filename-extension': [
          'error',
          {
            extensions: ['.jsx', '.tsx'],
          },
        ],
        'react/jsx-fragments': ['warn', 'syntax'],
        'react/jsx-key': [
          'error',
          {
            checkFragmentShorthand: true,
          },
        ],
        'react/jsx-max-depth': [
          'error',
          {
            max: 6,
          },
        ],
        'react/jsx-no-comment-textnodes': 'error',
        'react/jsx-no-constructed-context-values': 'error',
        'react/jsx-no-duplicate-props': 'error',
        'react/jsx-no-script-url': 'error',
        'react/jsx-no-target-blank': 'warn',
        'react/jsx-no-undef': 'error',
        'react/jsx-no-useless-fragment': 'error',
        'react/jsx-pascal-case': 'error',
        'react/jsx-uses-react': 'error',
        'react/jsx-uses-vars': 'error',
        'react/no-array-index-key': 'warn',
        'react/no-children-prop': 'error',
        'react/no-danger': 'warn',
        'react/no-danger-with-children': 'error',
        'react/no-deprecated': 'error',
        'react/no-did-mount-set-state': 'error',
        'react/no-did-update-set-state': 'error',
        'react/no-direct-mutation-state': 'error',
        'react/no-is-mounted': 'error',
        'react/no-redundant-should-component-update': 'warn',
        'react/no-string-refs': 'error',
        'react/no-this-in-sfc': 'error',
        'react/no-typos': 'error',
        'react/no-unknown-property': 'error',
        'react/no-unsafe': [
          'error',
          {
            checkAliases: true,
          },
        ],
        'react/no-unstable-nested-components': 'error',
        'react/no-will-update-set-state': 'error',
        'react/prefer-es6-class': ['error', 'always'],
        'react/require-default-props': [
          'warn',
          {
            functions: 'defaultArguments',
          },
        ],
        'react/require-render-return': 'error',
        'react/self-closing-comp': 'warn',
        'react/static-property-placement': 'error',
        'react/style-prop-object': 'error',
        'react/void-dom-elements-no-children': 'error',
        'jsx-a11y/html-has-lang': 'error',
        'jsx-a11y/iframe-has-title': 'error',
        'jsx-a11y/alt-text': 'error',
        'react/jsx-closing-bracket-location': 'off',
        'react/jsx-closing-tag-location': 'off',
        'react/jsx-curly-newline': 'off',
        'react/jsx-indent': 'off',
        'react/jsx-wrap-multilines': 'off',
        'react-hooks/rules-of-hooks': 'error',
        'react-hooks/exhaustive-deps': 'warn',
        'react/jsx-tag-spacing': 'off',
      },
    },
  ],
};
